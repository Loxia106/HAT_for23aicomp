# general settings
name: train_Real_HAT_mse_model
model_type: RealHATMSEModel
scale: 4
num_gpu: 1
manual_seed: 0
high_order_degradation: False
# ----------------- options for synthesizing training data in RealESRNetModel ----------------- #
gt_usm: False  # USM the ground-truth

# # the first degradation process
# resize_prob: [0.2, 0.7, 0.1]  # up, down, keep
# resize_range: [0.15, 1.5]
# gaussian_noise_prob: 0.5
# noise_range: [1, 30]
# poisson_scale_range: [0.05, 3]
# gray_noise_prob: 0.4
# jpeg_range: [30, 95]

# # the second degradation process
# second_blur_prob: 0.8
# resize_prob2: [0.3, 0.4, 0.3]  # up, down, keep
# resize_range2: [0.3, 1.2]
# gaussian_noise_prob2: 0.5
# noise_range2: [1, 25]
# poisson_scale_range2: [0.05, 2.5]
# gray_noise_prob2: 0.4
# jpeg_range2: [30, 95]

# gt_size: 256
queue_size: 180

# dataset and data loader settings
datasets:
  train:
    name: training
    type: PairedImageDataset
    dataroot_gt: datasets/train/hr
    dataroot_lq: datasets/train/lr
    #meta_info_file: hat/data/meta_info/meta_info_DF2Ksub_GT.txt
    io_backend:    
      type: disk
    gt_size: 512
    use_hflip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 12
    batch_size_per_gpu: 1
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val_1:
    name: validation
    type: PairedImageDataset
    dataroot_gt: datasets/valid/hr
    dataroot_lq: datasets/valid/lr
    io_backend:
      type: disk

# network structures
network_g:
  type: HAT
  upscale: 4
  in_chans: 3
  img_size: 64
  window_size: 16
  compress_ratio: 3
  squeeze_factor: 30
  conv_scale: 0.01
  overlap_ratio: 0.5
  img_range: 1.
  depths: [6, 6, 6, 6, 6, 6]
  embed_dim: 180
  num_heads: [6, 6, 6, 6, 6, 6]
  mlp_ratio: 2
  upsampler: 'pixelshuffle'
  resi_connection: '1conv'

# path
path:
  pretrain_network_g: ./experiments/pretrained_models/Real_HAT_GAN_SRx4.pth
  param_key_g: params_ema
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  # optim_d:
  #   type: Adam
  #   lr: !!float 1e-4
  #   weight_decay: 0
  #   betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [125000,250000,375000,500000]
    gamma: 0.5

  total_iter: 10000000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: MSELoss
    loss_weight: 1.0
    reduction: mean

# Uncomment these for validation
# validation settings
val:
  val_freq: !!float 5e3
  save_img: False
  pbar: True

  metrics:
    psnr: # metric name
      type: calculate_psnr
      crop_border: 4
      test_y_channel: True

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
